#include <bits/stdc++.h>
using namespace std;

const int MOD = 1e9 + 7;
const int MAX = 1e6 + 1;

vector<long long> fact(MAX), invFact(MAX);

long long power(long long a, long long b) {
    long long res = 1;
    while (b) {
        if (b % 2) res = res * a % MOD;
        a = a * a % MOD;
        b /= 2;
    }
    return res;
}

int main() {
    fact[0] = invFact[0] = 1;
    for (int i = 1; i < MAX; i++) fact[i] = fact[i - 1] * i % MOD;
    invFact[MAX - 1] = power(fact[MAX - 1], MOD - 2);
    for (int i = MAX - 2; i >= 1; i--) invFact[i] = invFact[i + 1] * (i + 1) % MOD;

    int n;
    cin >> n;
    while (n--) {
        int a, b;
        cin >> a >> b;
        long long ans = fact[a] * invFact[b] % MOD * invFact[a - b] % MOD;
        cout << ans << "\n";
    }
}
