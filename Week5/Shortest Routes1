#include <bits/stdc++.h>
using namespace std;

int main() {
    ios::sync_with_stdio(false);
    cin.tie(0);

    int n, m;
    cin >> n >> m;
    
    vector<vector<pair<int,long long>>> graph(n);
    for(int i=0;i<m;i++){
        int a,b;
        long long c;
        cin >> a >> b >> c;
        a--; b--;
        graph[a].push_back({b,c});
    }
    
    const long long INF = 1e18;
    vector<long long> dist(n, INF);
    dist[0] = 0;
    
    priority_queue<pair<long long,int>, vector<pair<long long,int>>, greater<>> cities;
    cities.push({0,0});
    
    while(!cities.empty()){
        auto [d,u] = cities.top(); cities.pop();
        if(d != dist[u]) continue;
        for(auto [v,w] : graph[u]){
            if(dist[v] > d + w){
                dist[v] = d + w;
                cities.push({dist[v], v});
            }
        }
    }
    
    for(long long x : dist) cout << x << " ";
    cout << "\n";
    
}
